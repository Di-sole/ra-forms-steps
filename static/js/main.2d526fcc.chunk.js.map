{"version":3,"sources":["components/StepCounterForm.js","components/StepCounterTable.js","components/StepCounter.js","App.js","index.js"],"names":["StepCounterForm","onAdd","useState","date","distance","form","setForm","handleChange","target","name","value","prevForm","className","onSubmit","e","preventDefault","walk","id","shortid","generate","Number","htmlFor","type","onChange","required","step","StepCounterTable","walks","onDelete","map","o","Date","toLocaleDateString","onClick","StepCounter","setWalks","newWalks","sameDate","find","push","sort","a","b","parse","prevWalks","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA6CeA,MAzCf,YAAqC,IAAVC,EAAS,EAATA,MAAS,EACXC,mBAAS,CAACC,KAAM,GAAIC,SAAU,KADnB,mBAC5BC,EAD4B,KACtBC,EADsB,KAG7BC,EAAe,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChBC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACrBJ,GAAQ,SAAAK,GAAQ,kCAASA,GAAT,kBAAoBF,EAAOC,QAe5C,OACC,uBAAME,UAAU,OAAOC,SAbH,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAO,CACZC,GAAIC,IAAQC,WACZhB,KAAME,EAAKF,KACXC,SAAUgB,OAAOf,EAAKD,WAGvBH,EAAMe,GACNV,EAAQ,CAACH,KAAM,GAAIC,SAAU,MAI7B,UACC,sBAAKQ,UAAU,YAAf,UACC,uBAAOA,UAAU,oBAAoBS,QAAQ,OAA7C,sCACA,uBAAOT,UAAU,wBAAwBU,KAAK,OAAOL,GAAG,OAAOR,KAAK,OAAOC,MAAOL,EAAKF,KAAMoB,SAAUhB,EAAciB,UAAQ,OAE9H,sBAAKZ,UAAU,YAAf,UACC,uBAAOA,UAAU,oBAAoBS,QAAQ,WAA7C,2EACA,uBAAOT,UAAU,aAAaU,KAAK,SAASL,GAAG,WAAWR,KAAK,WAAWgB,KAAK,MAAMf,MAAOL,EAAKD,SAAUmB,SAAUhB,EAAciB,UAAQ,OAE5I,wBAAQZ,UAAU,cAAcU,KAAK,SAArC,oBCFYI,MA/Bf,YAAgD,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAClC,OACC,wBAAOhB,UAAU,QAAjB,UACC,gCACC,+BACC,0DACA,+FACA,uFAGF,gCACEe,EAAME,KAAI,SAAAC,GAAC,OACX,+BACC,6BAAK,IAAIC,KAAKD,EAAE3B,MAAM6B,uBACtB,6BAAKF,EAAE1B,WACP,6BAAI,wBAAQQ,UAAU,iBAAiBqB,QAAS,kBAAML,EAASE,EAAEb,KAA7D,mBAHIa,EAAEb,aCmBDiB,MA7Bf,WAAwB,IAAD,EACIhC,mBAAS,IADb,mBACfyB,EADe,KACRQ,EADQ,KAqBtB,OACC,sBAAKvB,UAAU,eAAf,UACC,cAAC,EAAD,CAAiBX,MApBD,SAAAe,GACjB,IAAMoB,EAAQ,YAAOT,GACfU,EAAWD,EAASE,MAAK,SAAAR,GAAC,OAAIA,EAAE3B,OAASa,EAAKb,QAEhDkC,EACHA,EAASjC,UAAYY,EAAKZ,UAE1BgC,EAASG,KAAKvB,GACdoB,EAASI,MAAK,SAACC,EAAGC,GAAJ,OAAUX,KAAKY,MAAMF,EAAEtC,MAAQ4B,KAAKY,MAAMD,EAAEvC,UAG3DgC,EAASC,MAUR,cAAC,EAAD,CAAkBT,MAAOA,EAAOC,SAPb,SAAAX,GACnBkB,GAAS,SAAAS,GAAS,OAAIA,EAAUC,QAAO,SAAAf,GAAC,OAAIA,EAAEb,KAAOA,eCXzC6B,MARf,WACE,OACE,mCACD,cAAC,EAAD,OCAHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d526fcc.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\n\nfunction StepCounterForm({ onAdd }) {\n\tconst [form, setForm] = useState({date: '', distance: ''});\n\n\tconst handleChange = ({target}) => {\n\t\tconst name = target.name;\n\t\tconst value = target.value;\n\t\tsetForm(prevForm => ({...prevForm, [name]: value}))\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst walk = {\n\t\t\tid: shortid.generate(),\n\t\t\tdate: form.date,\n\t\t\tdistance: Number(form.distance)\n\t\t}\n\n\t\tonAdd(walk);\n\t\tsetForm({date: '', distance: ''});\n\t};\n\n\treturn (\n\t\t<form className=\"form\" onSubmit={handleSubmit}>\n\t\t\t<div className=\"form-elem\">\n\t\t\t\t<label className=\"input-description\" htmlFor=\"date\">Дата</label>\n\t\t\t\t<input className=\"form-input date-input\" type=\"date\" id=\"date\" name=\"date\" value={form.date} onChange={handleChange} required />\n\t\t\t</div>\n\t\t\t<div className=\"form-elem\">\n\t\t\t\t<label className=\"input-description\" htmlFor=\"distance\">Пройдено км</label>\n\t\t\t\t<input className=\"form-input\" type=\"number\" id=\"distance\" name=\"distance\" step=\"0.1\" value={form.distance} onChange={handleChange} required />\n\t\t\t</div>\n\t\t\t<button className=\"btn add-btn\" type=\"submit\">OK</button>\n\t\t</form>\n\t)\n}\n\n\nStepCounterForm.propTypes = {\n\tonAdd: PropTypes.func.isRequired\n}\n\nexport default StepCounterForm;","import PropTypes from \"prop-types\";\n\nfunction StepCounterTable({ walks, onDelete }) {\n\treturn (\n\t\t<table className=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Дата</th>\n\t\t\t\t\t<th>Пройдено км</th>\n\t\t\t\t\t<th>Действия</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{walks.map(o => \n\t\t\t\t\t<tr key={o.id}>\n\t\t\t\t\t\t<td>{new Date(o.date).toLocaleDateString()}</td>\n\t\t\t\t\t\t<td>{o.distance}</td>\n\t\t\t\t\t\t<td><button className=\"btn delete-btn\" onClick={() => onDelete(o.id)}>x</button></td>\n\t\t\t\t\t</tr>)}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nStepCounterTable.propTypes = {\n\twalks: PropTypes.arrayOf(PropTypes.shape({\n\t\tid: PropTypes.string,\n\t\tdate: PropTypes.string,\n\t\tdistance: PropTypes.number\n\t})).isRequired,\n\tonDelete: PropTypes.func.isRequired\n}\n\nexport default StepCounterTable;\n","import { useState } from \"react\";\nimport StepCounterForm from \"./StepCounterForm\";\nimport StepCounterTable from \"./StepCounterTable\";\n\nfunction StepCounter() {\n\tconst [walks, setWalks] = useState([]);\n\n\tconst handleAdd = walk => {\n\t\tconst newWalks = [...walks];\n\t\tconst sameDate = newWalks.find(o => o.date === walk.date)\n\n\t\tif (sameDate) {\n\t\t\tsameDate.distance += walk.distance\n\t\t} else {\n\t\t\tnewWalks.push(walk);\n\t\t\tnewWalks.sort((a, b) => Date.parse(a.date) - Date.parse(b.date));\n\t\t}\n\t\t\n\t\tsetWalks(newWalks);\n\t}\n\n\tconst handleDelete = id => {\n\t\t\tsetWalks(prevWalks => prevWalks.filter(o => o.id !== id));\n\t\t}\n\n\treturn (\n\t\t<div className=\"walk-counter\">\n\t\t\t<StepCounterForm onAdd={handleAdd} />\n\t\t\t<StepCounterTable walks={walks} onDelete={handleDelete} />\n\t\t</div>\n\t)\n}\n\nexport default StepCounter;","import './App.css';\nimport StepCounter from './components/StepCounter';\n\nfunction App() {\n  return (\n    <>\n\t\t\t<StepCounter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}